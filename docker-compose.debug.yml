version: '3.8'

services:
  api:
    build: .
    container_name: engine_api_debug
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db
    ports:
      - "8081:8081"
      - "5678:5678"  # Porta para debugpy
    volumes:
      - .:/app
      - /app/__pycache__
    command: python debug_entrypoint.py
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app

  worker:
    build: .
    container_name: engine_worker_debug
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db
    ports:
      - "5679:5678"  # Porta para debugpy do worker
    volumes:
      - .:/app
      - /app/__pycache__
    command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client consumer.py
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app

  carga:
    build: .
    container_name: engine_carga_debug
    env_file:
      - .env
    depends_on:
      - rabbitmq
    ports:
      - "5680:5678"  # Porta para debugpy do carga
    volumes:
      - .:/app
      - /app/__pycache__
    command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client consumer_carga.py
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  db:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  db_data: